# -*- coding: utf-8 -*-
"""Connect4444.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aYLYsd9UAhyhoQ2lgU4w5XHlk4ijyJ-_
"""

Board = [[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0]] #flip rows and column

WinStatus = False
FullColumn = False

rows = len(Board)
print("rows:" + str(rows))

columns = len(Board[1])
print("cols:" + str(columns))

#for i in range(rows): #print Board
    #print(Board[i])

#User1 and User2
def User1():
  global User1No
  global User1y
  global FullColumn
  User1No = int(input("User1 Pick a column:"))
  for i in range(columns):
    if Board[User1No][i] == 0:
      Board[User1No][i] = 1
      User1y = i
      break
  else:
    FullColumn = True
    print("User1. This column is full, please pick another coloumn.")

  print("| " + str(Board[0][5]) + " | " + str(Board[1][5]) + " | " + str(Board[2][5]) + " | " + str(Board[3][5]) + " | " + str(Board[4][5]) + " | " + str(Board[5][5]) + " | " + str(Board[6][5]) + " |")
  print("| " + str(Board[0][4]) + " | " + str(Board[1][4]) + " | " + str(Board[2][4]) + " | " + str(Board[3][4]) + " | " + str(Board[4][4]) + " | " + str(Board[5][4]) + " | " + str(Board[6][4]) + " |")
  print("| " + str(Board[0][3]) + " | " + str(Board[1][3]) + " | " + str(Board[2][3]) + " | " + str(Board[3][3]) + " | " + str(Board[4][3]) + " | " + str(Board[5][3]) + " | " + str(Board[6][3]) + " |")
  print("| " + str(Board[0][2]) + " | " + str(Board[1][2]) + " | " + str(Board[2][2]) + " | " + str(Board[3][2]) + " | " + str(Board[4][2]) + " | " + str(Board[5][2]) + " | " + str(Board[6][2]) + " |")
  print("| " + str(Board[0][1]) + " | " + str(Board[1][1]) + " | " + str(Board[2][1]) + " | " + str(Board[3][1]) + " | " + str(Board[4][1]) + " | " + str(Board[5][1]) + " | " + str(Board[6][1]) + " |")
  print("| " + str(Board[0][0]) + " | " + str(Board[1][0]) + " | " + str(Board[2][0]) + " | " + str(Board[3][0]) + " | " + str(Board[4][0]) + " | " + str(Board[5][0]) + " | " + str(Board[6][0]) + " |")
  #for i in range(rows): #print Board
    #print(Board[i])

def User2():
  global User2No
  global User2y
  global FullColumn
  User2No = int(input("User2 Pick a column:"))
  for i in range(columns):
    if Board[User2No][i] == 0:
      Board[User2No][i] = 2
      User2y = i
      break
  else:
    FullColumn = True
    print("User2. This column is full, please pick another coloumn.")
  print("| " + str(Board[0][5]) + " | " + str(Board[1][5]) + " | " + str(Board[2][5]) + " | " + str(Board[3][5]) + " | " + str(Board[4][5]) + " | " + str(Board[5][5]) + " | " + str(Board[6][5]) + " |")
  print("| " + str(Board[0][4]) + " | " + str(Board[1][4]) + " | " + str(Board[2][4]) + " | " + str(Board[3][4]) + " | " + str(Board[4][4]) + " | " + str(Board[5][4]) + " | " + str(Board[6][4]) + " |")
  print("| " + str(Board[0][3]) + " | " + str(Board[1][3]) + " | " + str(Board[2][3]) + " | " + str(Board[3][3]) + " | " + str(Board[4][3]) + " | " + str(Board[5][3]) + " | " + str(Board[6][3]) + " |")
  print("| " + str(Board[0][2]) + " | " + str(Board[1][2]) + " | " + str(Board[2][2]) + " | " + str(Board[3][2]) + " | " + str(Board[4][2]) + " | " + str(Board[5][2]) + " | " + str(Board[6][2]) + " |")
  print("| " + str(Board[0][1]) + " | " + str(Board[1][1]) + " | " + str(Board[2][1]) + " | " + str(Board[3][1]) + " | " + str(Board[4][1]) + " | " + str(Board[5][1]) + " | " + str(Board[6][1]) + " |")
  print("| " + str(Board[0][0]) + " | " + str(Board[1][0]) + " | " + str(Board[2][0]) + " | " + str(Board[3][0]) + " | " + str(Board[4][0]) + " | " + str(Board[5][0]) + " | " + str(Board[6][0]) + " |")
  #for i in range(rows): #print Board
    #print(Board[i])

def WinStatusCheck(x,y,user):
  global WinStatus
  #vertical
  n = 4
  for v in range(n):
    for a in range(n):
      try:
        if int(Board[y][x-a+v]) != user:
          break
        if(a==n-1):
          print("User"+ str(user) +" win. Congratulation!v")
          WinStatus = True
      except:
        pass


  #horizontal
  for h in range(n):
    for a in range(n):
      try:
        if y-a+h > rows-1:
          break
        if int(Board[y-a+h][x]) != user:
          break
        if(a==n-1):
          print("User"+ str(user) +" win. Congratulation!h")
          WinStatus = True
      except:
        pass


  #Slash /
  for s in range(n):
    for a in range(n):
      try:
        if y-a+s > rows-1 or x-a+s > columns-1:
          break
        if int(Board[y-a+s][x-a+s]) != user:
          break
        if(a==n-1):
          print("User"+ str(user) +" win. Congratulation!s")
          WinStatus = True
      except:
        pass


  #Backslash \
  for bs in range(n):
    for a in range(n):
      try:
        if y+a-bs > rows-1 or x-a+bs > columns-1:
          break
        if int(Board[y+a-bs][x-a+bs]) != user:
          break
        if(a==n-1):
          print("User"+ str(user) +" win. Congratulation!bs")
          WinStatus = True
      except:
        pass

passUser1 = None
while WinStatus == False:
  if passUser1 != True:
    User1()
    WinStatusCheck(User1y, User1No, 1)
    if FullColumn == True:
      FullColumn = False
      continue
  #print(User1y, User1No)
  if WinStatus == True:
    continue
  User2()
  WinStatusCheck(User2y, User2No, 2)
  passUser1 = False
  if FullColumn == True:
    passUser1 = True
    FullColumn = False
  #print(User2y, User2No)